{"version":3,"sources":["components/Controls.js","components/PokemonList.js","components/Pokemon.js","App.js","index.js"],"names":["Controls","goNext","goPrevious","className","id","onClick","PokemonList","pokemons","map","p","to","name","url","replace","padStart","toUpperCase","Pokemon","match","useState","pokemonData","setPokemonData","pokemonSpecies","setPokemonSpecies","useEffect","fetchPokemon","console","log","fetchPokemonSpecies","a","fetch","params","pokemon","json","pokemonJSON","species","speciesJSON","src","sprites","front_default","types","t","type","height","weight","flavor_text_entries","flavor_text","App","setPokemons","next","setNext","prev","setPrev","loading","setLoading","currentURL","setCurrentURL","fetchPokemons","previous","path","exact","results","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAkBeA,EAbE,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAC1B,OACE,sBAAKC,UAAU,WAAf,UACE,wBAAQC,GAAG,UAAUD,UAAU,iBAAiBE,QAASH,EAAzD,SACE,cAAC,IAAD,MAEF,wBAAQE,GAAG,UAAUD,UAAU,iBAAiBE,QAASJ,EAAzD,SACE,cAAC,IAAD,UCSOK,EAnBK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,qBAAKJ,UAAU,cAAf,SACGI,EAASC,KAAI,SAACC,GAAD,OACZ,cAAC,IAAD,CAAMC,GAAE,kBAAaD,EAAEE,MAAQR,UAAU,oBAAzC,SACE,oBAAgBA,UAAU,wBAA1B,UAEGM,EAAEG,IACAC,QAAQ,qCAAsC,IAC9CA,QAAQ,IAAK,IACbC,SAAS,EAAG,KAAM,IACpBL,EAAEE,KAAKI,gBANFN,EAAEE,c,QCiELK,EApEC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjB,EAAsCC,qBAAtC,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4CF,qBAA5C,mBAAOG,EAAP,KAAuBC,EAAvB,KAEAC,qBAAU,WACRC,IACAC,QAAQC,IAAIT,KACX,IAEHM,qBAAU,WACJJ,GAAaQ,MAChB,CAACR,IAEJ,IAAMK,EAAY,uCAAG,8BAAAI,EAAA,sEACGC,MAAM,qCAAD,OACYZ,EAAMa,OAAOnB,OAFjC,cACboB,EADa,gBAIOA,EAAQC,OAJf,OAIbC,EAJa,OAKnBb,EAAea,GALI,2CAAH,qDAQZN,EAAmB,uCAAG,8BAAAC,EAAA,sEACJC,MAAMV,EAAYe,QAAQtB,KADtB,cACpBsB,EADoB,gBAEAA,EAAQF,OAFR,OAEpBG,EAFoB,OAG1Bb,EAAkBa,GAHQ,2CAAH,qDAMzB,OACE,gCACE,cAAC,IAAD,CAAMzB,GAAG,IAAIP,UAAU,cAAvB,SACE,cAAC,IAAD,MAEF,qBAAKA,UAAU,cAAf,SACGgB,GAAeE,EACd,gCACE,sBAAKlB,UAAU,QAAf,UACE,oBAAIA,UAAU,cAAd,SAA6Bc,EAAMa,OAAOnB,KAAKI,gBAC/C,qBAAKZ,UAAU,iBAAf,SACE,qBAAKiC,IAAKjB,EAAYkB,QAAQC,kBAEhC,oBAAGnC,UAAU,gBAAb,gBAAiCgB,EAAYf,MAC7C,qBAAKD,UAAU,eAAf,SACGgB,EAAYoB,MAAM/B,KAAI,SAACgC,GAAD,OACrB,uBAAMrC,UAAWqC,EAAEC,KAAK9B,KAAO,QAA/B,UAAyC6B,EAAEC,KAAK9B,KAAhD,YAGJ,oBAAGR,UAAU,gBAAb,qBACgC,GAArBgB,EAAYuB,OADvB,SAGA,oBAAGvC,UAAU,gBAAb,qBACWgB,EAAYwB,OAAS,GADhC,YAIF,mBAAGxC,UAAU,cAAb,SACGkB,EAAeuB,oBAAoB,GAAGC,YAAYhC,QACjD,KACA,UAKN,gBCDKiC,MA1Df,WACE,MAAgC5B,mBAAS,MAAzC,mBAAOX,EAAP,KAAiBwC,EAAjB,KACA,EAAwB7B,qBAAxB,mBAAO8B,EAAP,KAAaC,EAAb,KACA,EAAwB/B,qBAAxB,mBAAOgC,EAAP,KAAaC,EAAb,KACA,EAA8BjC,oBAAS,GAAvC,mBAAOkC,EAAP,KAAgBC,EAAhB,KAEA,EAAoCnC,mBAClC,wDADF,mBAAOoC,EAAP,KAAmBC,EAAnB,KAIAhC,qBAAU,WACRiC,EAAcF,KACb,IAEH/B,qBAAU,WACJhB,IACF0C,EAAQ1C,EAASyC,MACjBG,EAAQ5C,EAASkD,aAElB,CAAClD,IAEJgB,qBAAU,WACRiC,EAAcF,KACb,CAACA,IAEJ,IAAME,EAAa,uCAAG,WAAO5C,GAAP,iBAAAgB,EAAA,sEACEC,MAAMjB,GADR,cACdmB,EADc,gBAEMA,EAAQC,OAFd,OAEdC,EAFc,OAGpBc,EAAYd,GACZoB,GAAW,GAJS,2CAAH,sDAmBnB,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,KAAK,IAAIC,OAAK,EAArB,SACE,sBAAKxD,UAAU,MAAf,UACE,yCACEiD,EAAwD,UAA9C,cAAC,EAAD,CAAa7C,SAAUA,EAASqD,UAC5C,cAAC,EAAD,CAAU3D,OAlBH,WACR+C,IACLK,GAAW,GACXE,EAAcP,KAekB9C,WAZf,WACZgD,IACLG,GAAW,GACXE,EAAcL,YAYZ,cAAC,IAAD,CAAOQ,KAAK,iBAAiBG,UAAW7C,QCtD9C8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6863198a.chunk.js","sourcesContent":["import {\r\n  GoTriangleLeft as Prev,\r\n  GoTriangleRight as Next,\r\n} from \"react-icons/go\";\r\n\r\nconst Controls = ({ goNext, goPrevious }) => {\r\n  return (\r\n    <div className=\"controls\">\r\n      <button id=\"prevBtn\" className=\"controlBtn btn\" onClick={goPrevious}>\r\n        <Prev></Prev>\r\n      </button>\r\n      <button id=\"nextBtn\" className=\"controlBtn btn\" onClick={goNext}>\r\n        <Next></Next>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Controls;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst PokemonList = ({ pokemons }) => {\r\n  return (\r\n    <div className=\"pokemonList\">\r\n      {pokemons.map((p) => (\r\n        <Link to={`pokemon/${p.name}`} className=\"pokemonListMember\">\r\n          <p key={p.name} className=\"pokemonListMemberText\">\r\n            {/* number */}\r\n            {p.url\r\n              .replace(\"https://pokeapi.co/api/v2/pokemon/\", \"\")\r\n              .replace(\"/\", \"\")\r\n              .padStart(3, \"0\")}{\" \"}\r\n            {p.name.toUpperCase()}\r\n          </p>\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AiOutlineArrowLeft as Arrow } from \"react-icons/ai\";\r\n\r\nconst Pokemon = ({ match }) => {\r\n  const [pokemonData, setPokemonData] = useState();\r\n  const [pokemonSpecies, setPokemonSpecies] = useState();\r\n  \r\n  useEffect(() => {\r\n    fetchPokemon();\r\n    console.log(match)\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (pokemonData) fetchPokemonSpecies();\r\n  }, [pokemonData]);\r\n\r\n  const fetchPokemon = async () => {\r\n    const pokemon = await fetch(\r\n      `https://pokeapi.co/api/v2/pokemon/${match.params.name}`\r\n    );\r\n    const pokemonJSON = await pokemon.json();\r\n    setPokemonData(pokemonJSON);\r\n  };\r\n\r\n  const fetchPokemonSpecies = async () => {\r\n    const species = await fetch(pokemonData.species.url);\r\n    const speciesJSON = await species.json();\r\n    setPokemonSpecies(speciesJSON);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Link to=\"/\" className=\"backBtn btn\">\r\n        <Arrow />\r\n      </Link>\r\n      <div className=\"pokemonData\">\r\n        {pokemonData && pokemonSpecies ? (\r\n          <div>\r\n            <div className=\"stats\">\r\n              <h1 className=\"pokemonName\">{match.params.name.toUpperCase()}</h1>\r\n              <div className=\"pokemonPicture\">\r\n                <img src={pokemonData.sprites.front_default} />\r\n              </div>\r\n              <p className=\"pokemonNumber\">nr {pokemonData.id}</p>\r\n              <div className=\"pokemonTypes\">\r\n                {pokemonData.types.map((t) => (\r\n                  <span className={t.type.name + \" type\"}>{t.type.name} </span>\r\n                ))}\r\n              </div>\r\n              <p className=\"pokemonHeight\">\r\n                height: {pokemonData.height * 10} cm\r\n              </p>\r\n              <p className=\"pokemonWeight\">\r\n                weight: {pokemonData.weight / 10} kg\r\n              </p>\r\n            </div>\r\n            <p className=\"description\">\r\n              {pokemonSpecies.flavor_text_entries[0].flavor_text.replace(\r\n                \"\\u000c\",\r\n                \" \"\r\n              )}\r\n            </p>\r\n          </div>\r\n        ) : (\r\n          \"loading\"\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokemon;\r\n","import { useEffect, useState } from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Controls from \"./components/Controls\";\nimport PokemonList from \"./components/PokemonList\";\nimport Pokemon from \"./components/Pokemon\";\n\nfunction App() {\n  const [pokemons, setPokemons] = useState(null);\n  const [next, setNext] = useState();\n  const [prev, setPrev] = useState();\n  const [loading, setLoading] = useState(true);\n\n  const [currentURL, setCurrentURL] = useState(\n    \"https://pokeapi.co/api/v2/pokemon/?offset=0&limit=10\"\n  );\n\n  useEffect(() => {\n    fetchPokemons(currentURL);\n  }, []);\n\n  useEffect(() => {\n    if (pokemons) {\n      setNext(pokemons.next);\n      setPrev(pokemons.previous);\n    }\n  }, [pokemons]);\n\n  useEffect(() => {\n    fetchPokemons(currentURL);\n  }, [currentURL]);\n\n  const fetchPokemons = async (url) => {\n    const pokemon = await fetch(url);\n    const pokemonJSON = await pokemon.json();\n    setPokemons(pokemonJSON);\n    setLoading(false);\n  };\n\n  const goNext = () => {\n    if (!next) return;\n    setLoading(true);\n    setCurrentURL(next);\n  };\n\n  const goPrevious = () => {\n    if (!prev) return;\n    setLoading(true);\n    setCurrentURL(prev);\n  };\n\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" exact>\n        <div className=\"App\">\n          <h1>Pokedex</h1>\n          {!loading ? <PokemonList pokemons={pokemons.results} /> : \"loading\"}\n          <Controls goNext={goNext} goPrevious={goPrevious} />\n        </div>\n      </Route>\n      <Route path=\"/pokemon/:name\" component={Pokemon}></Route>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}